from fastapi import APIRouter, Request, Depends, Form, HTTPException
from fastapi.responses import RedirectResponse
import requests
import os
from datetime import date
from collections import defaultdict

from starlette.templating import Jinja2Templates

from app.auth import get_current_user
from app.models import User


router = APIRouter()

TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
TELEGRAM_CHAT_ID = os.getenv("TELEGRAM_CHAT_ID")

templates = Jinja2Templates(directory="templates")
# –•—Ä–∞–Ω–∏–ª–∏—â–µ –ª–∏–º–∏—Ç–æ–≤ (—Ç–æ–ª—å–∫–æ –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞, –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –æ–±–Ω—É–ª—è–µ—Ç—Å—è)
feedback_limits = defaultdict(lambda: {"date": None, "count": 0})


@router.post("/feedback")
async def feedback(
    request: Request,
    message: str = Form(...),
    contact: str = Form(""),
    current_user: User = Depends(get_current_user)
):
    if not current_user:
        # –ù–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –º–æ–≥—É—Ç –æ—Å—Ç–∞–≤–ª—è—Ç—å –æ—Ç–∑—ã–≤—ã
        raise HTTPException(status_code=401, detail="–ù–µ–æ–±—Ö–æ–¥–∏–º–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è")

    user_id = current_user.id
    today = date.today()

    # –î–æ—Å—Ç–∞–µ–º –∏–∑ feedback_limits –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ user_id
    user_limit = feedback_limits[user_id]

    # –ï—Å–ª–∏ –¥–∞—Ç–∞ –≤ –∑–∞–ø–∏—Å–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å —Å–µ–≥–æ–¥–Ω—è—à–Ω–µ–π ‚Äî –æ–±–Ω—É–ª—è–µ–º
    if user_limit["date"] != today:
        user_limit["date"] = today
        user_limit["count"] = 0

    # –ï—Å–ª–∏ count —É–∂–µ 3, –±–ª–æ–∫–∏—Ä—É–µ–º
    if user_limit["count"] >= 3:
        return templates.TemplateResponse(
            "index.html",
            {
                "request": request,
                "feedback_error": "–í—ã –∏—Å—á–µ—Ä–ø–∞–ª–∏ –ª–∏–º–∏—Ç –æ—Ç–∑—ã–≤–æ–≤ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è."
            }
        )

    # –ò–Ω–∞—á–µ —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á—ë—Ç—á–∏–∫ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–∑—ã–≤
    user_limit["count"] += 1

    text = (
        f"üìù –ù–æ–≤—ã–π –æ—Ç–∑—ã–≤ –æ—Ç user_id={user_id}:\n\n{message.strip()}\n\n"
        f"–ö–æ–Ω—Ç–∞–∫—Ç: {contact.strip() or '–Ω–µ —É–∫–∞–∑–∞–Ω'}"
    )

    if TELEGRAM_TOKEN and TELEGRAM_CHAT_ID:
        requests.post(
            f"https://api.telegram.org/bot{TELEGRAM_TOKEN}/sendMessage",
            data={"chat_id": TELEGRAM_CHAT_ID, "text": text}
        )

    return RedirectResponse("/", status_code=302)
