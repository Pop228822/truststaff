"""
–°–∏—Å—Ç–µ–º–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ–± –æ—à–∏–±–∫–∞—Ö –≤ Telegram
"""
import os
import requests
import traceback
from datetime import datetime
from typing import Optional


# Telegram –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
TELEGRAM_CHAT_ID = os.getenv("TELEGRAM_CHAT_ID")


def send_error_notification(
    error: Exception,
    request: Optional[object] = None,
    user_info: Optional[str] = None
) -> None:
    """
    –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ –≤ Telegram
    
    Args:
        error: –û–±—ä–µ–∫—Ç –∏—Å–∫–ª—é—á–µ–Ω–∏—è
        request: –û–±—ä–µ–∫—Ç –∑–∞–ø—Ä–æ—Å–∞ FastAPI (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
        user_info: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    """
    if not TELEGRAM_TOKEN or not TELEGRAM_CHAT_ID:
        return

    try:
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—à–∏–±–∫–µ
        error_type = type(error).__name__
        error_message = str(error)
        error_traceback = traceback.format_exc()
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–ø—Ä–æ—Å–µ
        request_info = ""
        if request:
            # –ë–µ–∑–æ–ø–∞—Å–Ω–æ –ø–æ–ª—É—á–∞–µ–º IP –∞–¥—Ä–µ—Å
            client_ip = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
            try:
                if hasattr(request, 'client') and request.client:
                    if hasattr(request.client, 'host'):
                        client_ip = request.client.host
                    elif hasattr(request.client, 'get'):
                        client_ip = request.client.get('host', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')
            except:
                pass
            
            request_info = f"""
üåê **–ó–∞–ø—Ä–æ—Å:**
‚Ä¢ URL: {getattr(request, 'url', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}
‚Ä¢ –ú–µ—Ç–æ–¥: {getattr(request, 'method', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}
‚Ä¢ IP: {client_ip}
‚Ä¢ User-Agent: {request.headers.get('user-agent', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ') if hasattr(request, 'headers') else '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}"""

        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        user_info_text = f"\nüë§ **–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:** {user_info}" if user_info else ""

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        text = f"""üö® **–ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –ù–ê –°–ï–†–í–ï–†–ï!**

‚è∞ **–í—Ä–µ–º—è:** {datetime.now().strftime('%d.%m.%Y %H:%M:%S')}

‚ùå **–û—à–∏–±–∫–∞:** {error_type}
üìù **–°–æ–æ–±—â–µ–Ω–∏–µ:** {error_message}
{user_info_text}{request_info}

üîç **–°—Ç–µ–∫ –≤—ã–∑–æ–≤–æ–≤:**
```
{error_traceback[:1000]}...
```"""

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Telegram
        response = requests.post(
            f"https://api.telegram.org/bot{TELEGRAM_TOKEN}/sendMessage",
            data={
                "chat_id": TELEGRAM_CHAT_ID,
                "text": text,
                "parse_mode": "Markdown"
            },
            timeout=10
        )
        
    except Exception as e:
        # –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É, –Ω–æ –Ω–µ –≤—ã–≤–æ–¥–∏–º –≤ –∫–æ–Ω—Å–æ–ª—å
        import logging
        logger = logging.getLogger(__name__)
        logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ Telegram: {e}")


def send_500_error_notification(
    error: Exception,
    request: Optional[object] = None,
    user_info: Optional[str] = None
) -> None:
    """
    –°–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è 500 –æ—à–∏–±–æ–∫
    """
    if not TELEGRAM_TOKEN or not TELEGRAM_CHAT_ID:
        return

    try:
        error_type = type(error).__name__
        error_message = str(error)
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–ø—Ä–æ—Å–µ
        request_info = ""
        if request:
            # –ë–µ–∑–æ–ø–∞—Å–Ω–æ –ø–æ–ª—É—á–∞–µ–º IP –∞–¥—Ä–µ—Å
            client_ip = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
            try:
                if hasattr(request, 'client') and request.client:
                    if hasattr(request.client, 'host'):
                        client_ip = request.client.host
                    elif hasattr(request.client, 'get'):
                        client_ip = request.client.get('host', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')
            except:
                pass
            
            request_info = f"""
üåê **–ó–∞–ø—Ä–æ—Å:**
‚Ä¢ URL: {getattr(request, 'url', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}
‚Ä¢ –ú–µ—Ç–æ–¥: {getattr(request, 'method', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}
‚Ä¢ IP: {client_ip}"""

        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        user_info_text = f"\nüë§ **–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:** {user_info}" if user_info else ""

        text = f"""üî• **500 –û–®–ò–ë–ö–ê –°–ï–†–í–ï–†–ê!**

‚è∞ **–í—Ä–µ–º—è:** {datetime.now().strftime('%d.%m.%Y %H:%M:%S')}

‚ùå **–û—à–∏–±–∫–∞:** {error_type}
üìù **–°–æ–æ–±—â–µ–Ω–∏–µ:** {error_message}
{user_info_text}{request_info}

‚ö†Ô∏è **–¢—Ä–µ–±—É–µ—Ç—Å—è –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ–µ –≤–Ω–∏–º–∞–Ω–∏–µ!**"""

        response = requests.post(
            f"https://api.telegram.org/bot{TELEGRAM_TOKEN}/sendMessage",
            data={
                "chat_id": TELEGRAM_CHAT_ID,
                "text": text,
                "parse_mode": "Markdown"
            },
            timeout=10
        )
        
    except Exception as e:
        # –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É, –Ω–æ –Ω–µ –≤—ã–≤–æ–¥–∏–º –≤ –∫–æ–Ω—Å–æ–ª—å
        import logging
        logger = logging.getLogger(__name__)
        logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ 500 —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ Telegram: {e}")
