import smtplib
import os
from dotenv import load_dotenv
import ssl
from email.mime.text import MIMEText
from email.utils import formataddr

load_dotenv()

SMTP_USER = "noreply@truststaff.ru"
SENDER_NAME = "TrustStaff"
SMTP_HOST = os.getenv("SMTP_HOST")
SMTP_PORT = os.getenv("SMTP_PORT")
SMTP_PASSWORD = os.getenv("SMTP_PASSWORD")

# ----------------------------------------------------------
def send_verification_email(to_addr: str, token: str) -> bool:
    link = f"https://truststaff.onrender.com/verify?token={token}"
    body_html = f"""
    <html><body>
    –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!<br><br>
    –ß—Ç–æ–±—ã –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–æ—á—Ç—É, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ:<br>
    <a href="{link}">{link}</a><br><br>
    –ï—Å–ª–∏ –≤—ã –Ω–µ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å, –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä—É–π—Ç–µ —ç—Ç–æ –ø–∏—Å—å–º–æ.
    </body></html>
    """

    # –§–æ—Ä–º–∏—Ä—É–µ–º MIME-–ø–∏—Å—å–º–æ
    msg = MIMEText(body_html, "html", "utf-8")
    msg["Subject"] = "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –≤–∞—à—É –ø–æ—á—Ç—É"
    msg["From"] = formataddr((SENDER_NAME, SMTP_USER))
    msg["To"] = to_addr

    try:
        # –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π TLS-–∫–æ–Ω—Ç–µ–∫—Å—Ç ‚Äî –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ –≤–∫–ª—é—á–µ–Ω–∞
        ctx = ssl.create_default_context()

        # ‚ûú –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ, –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è, –æ—Ç–ø—Ä–∞–≤–∫–∞
        with smtplib.SMTP_SSL(SMTP_HOST, SMTP_PORT, context=ctx) as server:
            server.login(SMTP_USER, SMTP_PASSWORD)
            server.sendmail(SMTP_USER, [to_addr], msg.as_string())

        print("üì§ Email –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —á–µ—Ä–µ–∑ sm17.hosting.reg.ru")
        return True

    except Exception as exc:
        # –õ–æ–≥–∏—Ä—É–µ–º –ø—Ä–∏—á–∏–Ω—É ‚Äî —É–¥–æ–±–Ω–æ –≤–∏–¥–µ—Ç—å –≤ Render-–ª–æ–≥–∞—Ö
        print("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–∏—Å—å–º–∞:", repr(exc))
        return False
